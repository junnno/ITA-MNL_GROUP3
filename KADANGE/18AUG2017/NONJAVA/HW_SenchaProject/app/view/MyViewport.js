/*
 * File: app/view/MyViewport.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.MyViewport', {
    extend: 'Ext.container.Viewport',
    alias: 'widget.myviewport',

    requires: [
        'MyApp.view.MyViewportViewModel',
        'Ext.form.Panel',
        'Ext.form.Label',
        'Ext.button.Button'
    ],

    viewModel: {
        type: 'myviewport'
    },
    height: 250,
    width: 400,
    layout: 'fit',
    defaultListenerScope: true,

    items: [
        {
            xtype: 'container',
            flex: 1,
            id: 'firstContainerId',
            layout: 'fit',
            items: [
                {
                    xtype: 'form',
                    id: 'firstFormId',
                    layout: 'vbox',
                    bodyPadding: 10,
                    title: 'This is a Form',
                    items: [
                        {
                            xtype: 'label',
                            text: '3) Write custom events in extJS and fire the events with fireEventmethod. Try different events and event listeners. Then have it moving in different direction using drag operation.'
                        },
                        {
                            xtype: 'button',
                            draggable: true,
                            id: 'firstButtonId',
                            text: 'Click me!',
                            listeners: {
                                click: 'onFirstButtonIdClick',
                                mouseout: 'onFirstButtonIdMouseOut',
                                move: {
                                    fn: 'onFirstButtonIdMove',
                                    buffer: 5
                                }
                            }
                        }
                    ]
                }
            ]
        }
    ],

    onFirstButtonIdClick: function(button, e, eOpts) {
        Ext.MessageBox.alert("Mouse Click","This is on mouse click on button!");
    },

    onFirstButtonIdMouseOut: function(button, e, eOpts) {
        Ext.MessageBox.alert("Mouse out","This is on mouse out of button!");
    },

    onFirstButtonIdMove: function(component, x, y, eOpts) {
        Ext.MessageBox.alert("Button move","Button has moved!");
    }

});